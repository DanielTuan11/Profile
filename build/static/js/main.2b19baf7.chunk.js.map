{"version":3,"sources":["context/AuthContext.js","components/Navbar.js","components/Footer.js","pages/Home.js","pages/Login.js","pages/ContactCard.js","pages/EditContact.js","pages/NotFound.js","App.js","reportWebVitals.js","index.js"],"names":["AuthContext","createContext","DEMO_MODE","window","location","hostname","DEMO_USER","username","DEMO_CREDENTIALS","DEMO_CONTACT_DATA","AuthProvider","_ref","children","isAuthenticated","setIsAuthenticated","useState","user","setUser","loading","setLoading","error","setError","useEffect","async","token","localStorage","getItem","removeItem","setAuthToken","res","axios","get","data","valid","err","console","checkAuth","defaults","headers","common","React","createElement","Provider","value","login","password","setItem","post","verifyRes","response","message","logout","getContactData","demoMode","Navbar","useContext","navigate","useNavigate","useLocation","scrolled","setScrolled","handleScroll","scrollY","addEventListener","removeEventListener","BootstrapNavbar","bg","variant","expand","className","style","transition","padding","boxShadow","Container","Brand","as","Link","to","FaIdCard","size","Toggle","aria-controls","Collapse","id","Nav","pathname","FaHome","includes","FaEdit","Dropdown","align","FaUserCog","Menu","Item","Divider","onClick","handleLogout","FaSignOutAlt","FaSignInAlt","Footer","currentYear","Date","getFullYear","Row","Col","md","FaMobileAlt","FaQrcode","FaLock","FaGithub","Home","Alert","Heading","FaInfoCircle","lg","Button","FaGlobe","xs","sm","Card","Body","Title","Text","FaUserShield","FaShareAlt","FaRocket","Login","formData","setFormData","validated","setValidated","onChange","e","target","name","Header","Form","noValidate","onSubmit","preventDefault","currentTarget","checkValidity","stopPropagation","Group","controlId","Label","Control","type","placeholder","required","Feedback","ContactCard","contactData","setContactData","activeTab","setActiveTab","animateProfile","setAnimateProfile","isMobile","setIsMobile","innerWidth","useParams","cardRef","useRef","isPublicView","URLSearchParams","search","forcedPrivateView","setForcedPrivateView","handleResize","mobile","document","body","classList","add","remove","shouldShowPublicDataOnly","endpoint","setTimeout","fetchContactData","Spinner","animation","currentUrl","href","ref","FaShare","profileImage","src","alt","charAt","FaUserTie","title","FaBuilding","company","email","FaEnvelope","phone","FaPhone","website","rel","replace","address","FaMapMarkerAlt","identificationNumber","FaIdBadge","taxNumber","FaFileInvoiceDollar","bankAccounts","length","map","account","index","key","FaUniversity","bankName","accountType","accountNumber","routingNumber","swift","socials","Object","keys","linkedin","aria-label","FaLinkedin","twitter","FaTwitter","github","instagram","FaInstagram","bio","downloadVCard","vcard","generateVCard","additionalInfo","forEach","blob","Blob","url","URL","createObjectURL","a","download","appendChild","click","removeChild","revokeObjectURL","FaDownload","copyContactInfo","info","navigator","clipboard","writeText","alert","QRCode","level","renderAs","includeMargin","print","share","text","EditContact","authLoading","saving","setSaving","success","setSuccess","handleChange","socialField","split","handleBankAccountChange","field","updatedBankAccounts","FaUser","Promise","resolve","put","scrollTo","top","behavior","FaBriefcase","rows","addBankAccount","splice","removeBankAccount","FaTimes","FaCreditCard","Select","disabled","Fragment","role","aria-hidden","FaSave","NotFound","baseURL","NavbarWrapper","isContactCardPage","App","HashRouter","Routes","Route","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.2b19baf7.chunk.js","sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport const AuthContext = createContext();\r\n\r\n// Demo mode constants for GitHub Pages deployment\r\nconst DEMO_MODE = window.location.hostname === 'danieltuan11.github.io';\r\nconst DEMO_USER = { username: 'admin' };\r\nconst DEMO_TOKEN = 'demo-token';\r\n// Real credentials from server/.env\r\nconst DEMO_CREDENTIALS = { \r\n  username: 'admin',  // From ADMIN_USERNAME in .env\r\n  password: 'password123' // From the comment in .env that says this is the unhashed version\r\n};\r\n\r\n// Actual contact data from server/data/contacts.json\r\nconst DEMO_CONTACT_DATA = {\r\n  \"name\": \"Anton\",\r\n  \"title\": \"Solution Architecture\",\r\n  \"company\": \"De heus\",\r\n  \"email\": \"haminton46@gmail.com\",\r\n  \"phone\": \"+84 782884650\",\r\n  \"address\": \"188/1 Nguyễn Văn Hưởng, Phường Thảo Điền, Quận 2\",\r\n  \"website\": \"https://trickbaker.github.io\",\r\n  \"bio\": \"Experienced product manager with a passion for creating user-friendly digital experiences.\",\r\n  \"socials\": {\r\n    \"linkedin\": \"https://linkedin.com/in/johndoe\",\r\n    \"twitter\": \"https://twitter.com/johndoe\",\r\n    \"github\": \"https://github.com/johndoe\",\r\n    \"instagram\": \"https://instagram.com/johndoe\"\r\n  },\r\n  \"profileImage\": \"https://rawzonestorage.blob.core.windows.net/d-public/users/avatars/07832af9743bb893c93ec37d5174ebc6ea2e1975_1741337099976.jpg\",\r\n  \"bankAccounts\": [\r\n    {\r\n      \"bankName\": \"Techcombank\",\r\n      \"accountNumber\": \"19033953608016\",\r\n      \"accountType\": \"Checking\",\r\n      \"routingNumber\": \"TECHCOMBANK\",\r\n      \"swift\": \"VTCBVNVX\"\r\n    }\r\n  ],\r\n  \"taxNumber\": \"123-45-6789\",\r\n  \"identificationNumber\": \"AB-123456789\"\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Check if user is authenticated on initial load\r\n  useEffect(() => {\r\n    const checkAuth = async () => {\r\n      // Check if token exists in localStorage\r\n      const token = localStorage.getItem('token');\r\n      \r\n      if (!token) {\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      try {\r\n        if (DEMO_MODE) {\r\n          // Demo mode - just set as authenticated if token matches demo token\r\n          if (token === DEMO_TOKEN) {\r\n            setIsAuthenticated(true);\r\n            setUser(DEMO_USER);\r\n          } else {\r\n            localStorage.removeItem('token');\r\n          }\r\n          setLoading(false);\r\n        } else {\r\n          // Production mode - verify with server\r\n          // Set auth token header\r\n          setAuthToken(token);\r\n          \r\n          // Verify token with backend\r\n          const res = await axios.get('/api/auth/verify');\r\n          \r\n          if (res.data.valid) {\r\n            setIsAuthenticated(true);\r\n            setUser(res.data.user);\r\n          } else {\r\n            // Token is invalid\r\n            localStorage.removeItem('token');\r\n            setAuthToken(null);\r\n          }\r\n          setLoading(false);\r\n        }\r\n      } catch (err) {\r\n        console.error('Auth verification error:', err);\r\n        localStorage.removeItem('token');\r\n        setAuthToken(null);\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    checkAuth();\r\n  }, []);\r\n\r\n  // Set auth token in axios headers\r\n  const setAuthToken = (token) => {\r\n    if (token) {\r\n      axios.defaults.headers.common['x-auth-token'] = token;\r\n    } else {\r\n      delete axios.defaults.headers.common['x-auth-token'];\r\n    }\r\n  };\r\n\r\n  // Login user\r\n  const login = async (username, password) => {\r\n    setError(null);\r\n    \r\n    try {\r\n      if (DEMO_MODE) {\r\n        // Demo mode login - check against demo credentials\r\n        if (username === DEMO_CREDENTIALS.username && password === DEMO_CREDENTIALS.password) {\r\n          localStorage.setItem('token', DEMO_TOKEN);\r\n          setIsAuthenticated(true);\r\n          setUser(DEMO_USER);\r\n          return true;\r\n        } else {\r\n          setError('Invalid credentials');\r\n          return false;\r\n        }\r\n      } else {\r\n        // Production mode - verify with server\r\n        const res = await axios.post('/api/auth/login', { username, password });\r\n        \r\n        // Save token to localStorage\r\n        localStorage.setItem('token', res.data.token);\r\n        \r\n        // Set token in axios headers\r\n        setAuthToken(res.data.token);\r\n        \r\n        // Verify token to get user data\r\n        const verifyRes = await axios.get('/api/auth/verify');\r\n        \r\n        setIsAuthenticated(true);\r\n        setUser(verifyRes.data.user);\r\n        \r\n        return true;\r\n      }\r\n    } catch (err) {\r\n      setError(\r\n        err.response && err.response.data.message\r\n          ? err.response.data.message\r\n          : 'Login failed'\r\n      );\r\n      return false;\r\n    }\r\n  };\r\n\r\n  // Logout user\r\n  const logout = () => {\r\n    // Remove token from localStorage\r\n    localStorage.removeItem('token');\r\n    \r\n    // Remove token from axios headers\r\n    setAuthToken(null);\r\n    \r\n    // Reset state\r\n    setIsAuthenticated(false);\r\n    setUser(null);\r\n  };\r\n\r\n  // Get contact data\r\n  const getContactData = async () => {\r\n    if (DEMO_MODE) {\r\n      // In demo mode, return the demo data\r\n      return DEMO_CONTACT_DATA;\r\n    } else {\r\n      // In production, get data from the server\r\n      try {\r\n        const res = await axios.get('/api/contact');\r\n        return res.data;\r\n      } catch (err) {\r\n        console.error('Error fetching contact data:', err);\r\n        return null;\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        isAuthenticated,\r\n        user,\r\n        loading,\r\n        error,\r\n        login,\r\n        logout,\r\n        getContactData,\r\n        demoMode: DEMO_MODE\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}; ","import React, { useContext, useState, useEffect } from 'react';\r\nimport { Link, useNavigate, useLocation } from 'react-router-dom';\r\nimport { Navbar as BootstrapNavbar, Nav, Container, Button, Dropdown } from 'react-bootstrap';\r\nimport { FaIdCard, FaHome, FaSignInAlt, FaSignOutAlt, FaEdit, FaUserCog } from 'react-icons/fa';\r\nimport { AuthContext } from '../context/AuthContext';\r\n\r\nconst Navbar = () => {\r\n  const { isAuthenticated, logout } = useContext(AuthContext);\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const [scrolled, setScrolled] = useState(false);\r\n\r\n  // Handle scroll effect for navbar\r\n  useEffect(() => {\r\n    const handleScroll = () => {\r\n      if (window.scrollY > 50) {\r\n        setScrolled(true);\r\n      } else {\r\n        setScrolled(false);\r\n      }\r\n    };\r\n\r\n    window.addEventListener('scroll', handleScroll);\r\n    return () => {\r\n      window.removeEventListener('scroll', handleScroll);\r\n    };\r\n  }, []);\r\n\r\n  const handleLogout = () => {\r\n    logout();\r\n    navigate('/');\r\n  };\r\n\r\n  return (\r\n    <BootstrapNavbar \r\n      bg=\"dark\" \r\n      variant=\"dark\" \r\n      expand=\"lg\" \r\n      className={`fixed-top ${scrolled ? 'scrolled' : ''}`}\r\n      style={{\r\n        transition: 'all 0.3s ease',\r\n        padding: scrolled ? '0.5rem 1rem' : '1rem 1rem',\r\n        boxShadow: scrolled ? '0 5px 15px rgba(0, 0, 0, 0.1)' : 'none'\r\n      }}\r\n    >\r\n      <Container>\r\n        <BootstrapNavbar.Brand as={Link} to=\"/\" className=\"d-flex align-items-center\">\r\n          <FaIdCard className=\"me-2\" size={24} />\r\n          <span>InfoCrypting</span>\r\n        </BootstrapNavbar.Brand>\r\n        <BootstrapNavbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <BootstrapNavbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"me-auto\">\r\n            <Nav.Link \r\n              as={Link} \r\n              to=\"/\" \r\n              className={location.pathname === '/' ? 'active' : ''}\r\n            >\r\n              <FaHome className=\"me-1\" /> Home\r\n            </Nav.Link>\r\n            <Nav.Link \r\n              as={Link} \r\n              to=\"/contact\" \r\n              className={location.pathname.includes('/contact') ? 'active' : ''}\r\n            >\r\n              <FaIdCard className=\"me-1\" /> Contact Card\r\n            </Nav.Link>\r\n            {isAuthenticated && (\r\n              <Nav.Link \r\n                as={Link} \r\n                to=\"/edit\" \r\n                className={location.pathname === '/edit' ? 'active' : ''}\r\n              >\r\n                <FaEdit className=\"me-1\" /> Edit Info\r\n              </Nav.Link>\r\n            )}\r\n          </Nav>\r\n          <Nav>\r\n            {isAuthenticated ? (\r\n              <Dropdown align=\"end\">\r\n                <Dropdown.Toggle variant=\"outline-light\" id=\"user-dropdown\" className=\"d-flex align-items-center\">\r\n                  <FaUserCog className=\"me-2\" /> Account\r\n                </Dropdown.Toggle>\r\n                <Dropdown.Menu>\r\n                  <Dropdown.Item as={Link} to=\"/edit\">\r\n                    <FaEdit className=\"me-2\" /> Edit Profile\r\n                  </Dropdown.Item>\r\n                  <Dropdown.Divider />\r\n                  <Dropdown.Item onClick={handleLogout}>\r\n                    <FaSignOutAlt className=\"me-2\" /> Logout\r\n                  </Dropdown.Item>\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            ) : (\r\n              <Nav.Link \r\n                as={Link} \r\n                to=\"/login\"\r\n                className={`d-flex align-items-center ${location.pathname === '/login' ? 'active' : ''}`}\r\n              >\r\n                <FaSignInAlt className=\"me-1\" /> Login\r\n              </Nav.Link>\r\n            )}\r\n          </Nav>\r\n        </BootstrapNavbar.Collapse>\r\n      </Container>\r\n    </BootstrapNavbar>\r\n  );\r\n};\r\n\r\nexport default Navbar; ","import React from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport { FaIdCard, FaMobileAlt, FaQrcode, FaLock, FaGithub } from 'react-icons/fa';\r\n\r\nconst Footer = () => {\r\n  const currentYear = new Date().getFullYear();\r\n  \r\n  return (\r\n    <footer className=\"py-4 mt-auto\">\r\n      <Container>\r\n        <Row className=\"align-items-center\">\r\n          <Col md={4} className=\"text-center text-md-start mb-3 mb-md-0\">\r\n            <div className=\"d-flex align-items-center justify-content-center justify-content-md-start\">\r\n              <FaIdCard className=\"me-2\" size={24} />\r\n              <h5 className=\"mb-0 fw-bold\">InfoCrypting</h5>\r\n            </div>\r\n            <p className=\"small mb-0 mt-2\">\r\n              &copy; {currentYear} All Rights Reserved\r\n            </p>\r\n          </Col>\r\n          \r\n          <Col md={4} className=\"text-center mb-3 mb-md-0\">\r\n            <div className=\"d-flex justify-content-center\">\r\n              <div className=\"mx-2 footer-icon\">\r\n                <FaMobileAlt size={18} />\r\n              </div>\r\n              <div className=\"mx-2 footer-icon\">\r\n                <FaQrcode size={18} />\r\n              </div>\r\n              <div className=\"mx-2 footer-icon\">\r\n                <FaLock size={18} />\r\n              </div>\r\n              <div className=\"mx-2 footer-icon\">\r\n                <FaGithub size={18} />\r\n              </div>\r\n            </div>\r\n            <p className=\"small mb-0 mt-2\">\r\n              Securely share your contact information\r\n            </p>\r\n          </Col>\r\n          \r\n          <Col md={4} className=\"text-center text-md-end\">\r\n            <p className=\"mb-1 fw-bold\">Digital Contact Card</p>\r\n            <p className=\"small mb-0\">\r\n              NFC & QR Code Enabled\r\n            </p>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer; ","import React, { useContext } from 'react';\r\nimport { Container, Row, Col, Card, Button, Alert } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { \r\n  FaMobileAlt, FaQrcode, FaLock, FaUserShield, \r\n  FaIdCard, FaShareAlt, FaGlobe, FaRocket,\r\n  FaInfoCircle\r\n} from 'react-icons/fa';\r\nimport { AuthContext } from '../context/AuthContext';\r\n\r\nconst Home = () => {\r\n  const { isAuthenticated, demoMode } = useContext(AuthContext);\r\n\r\n  return (\r\n    <Container>\r\n      {/* Demo Mode Notice */}\r\n      {demoMode && (\r\n        <Row className=\"py-3\">\r\n          <Col>\r\n            <Alert variant=\"info\">\r\n              <Alert.Heading>\r\n                <FaInfoCircle className=\"me-2\" /> Demo Mode Active\r\n              </Alert.Heading>\r\n              <p>\r\n                This is a demo version running on GitHub Pages with your actual contact data, but without a backend server.\r\n                Changes you make will not be permanently saved since there's no database connection.\r\n              </p>\r\n              <hr />\r\n              <p className=\"mb-0\">\r\n                <strong>Login with:</strong> Username: <code>admin</code> / Password: <code>password123</code>\r\n              </p>\r\n            </Alert>\r\n          </Col>\r\n        </Row>\r\n      )}\r\n\r\n      {/* Hero Section */}\r\n      <Row className=\"py-5 align-items-center\">\r\n        <Col lg={6} className=\"mb-5 mb-lg-0\">\r\n          <div className=\"hero-content\">\r\n            <h1 className=\"display-4 fw-bold mb-4\">\r\n              Your Digital Identity, <span className=\"text-gradient\">Secured</span>\r\n            </h1>\r\n            <p className=\"lead mb-4\">\r\n              Share your contact information instantly with NFC tap or QR scan. \r\n              Control what information is public and what stays private.\r\n            </p>\r\n            <div className=\"d-flex flex-column flex-sm-row gap-3\">\r\n              {!isAuthenticated && (\r\n                <Button as={Link} to=\"/login\" variant=\"primary\" size=\"lg\" className=\"rounded-pill\">\r\n                  <FaLock className=\"me-2\" /> Login to Access\r\n                </Button>\r\n              )}\r\n              {isAuthenticated && (\r\n                <Button as={Link} to=\"/contact\" variant=\"primary\" size=\"lg\" className=\"rounded-pill\">\r\n                  <FaIdCard className=\"me-2\" /> View Contact Card\r\n                </Button>\r\n              )}\r\n              <Button as={Link} to=\"/contact?view=public\" variant=\"outline-primary\" size=\"lg\" className=\"rounded-pill\">\r\n                <FaGlobe className=\"me-2\" /> Public View Only\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </Col>\r\n        <Col lg={6}>\r\n          <div className=\"hero-image-container text-center\">\r\n            <div className=\"hero-image\">\r\n              <div className=\"card-mockup\">\r\n                <div className=\"card-mockup-header\"></div>\r\n                <div className=\"card-mockup-body\">\r\n                  <div className=\"mockup-avatar\"></div>\r\n                  <div className=\"mockup-content\">\r\n                    <div className=\"mockup-line\"></div>\r\n                    <div className=\"mockup-line short\"></div>\r\n                  </div>\r\n                  <div className=\"mockup-icons\">\r\n                    <div className=\"mockup-icon\"></div>\r\n                    <div className=\"mockup-icon\"></div>\r\n                    <div className=\"mockup-icon\"></div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"card-mockup-footer\"></div>\r\n              </div>\r\n              <div className=\"floating-qr\">\r\n                <FaQrcode size={40} />\r\n              </div>\r\n              <div className=\"floating-nfc\">\r\n                <FaMobileAlt size={30} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n\r\n      {/* Features Section */}\r\n      <Row className=\"py-5\">\r\n        <Col xs={12} className=\"text-center mb-5\">\r\n          <h2 className=\"fw-bold\">Why Choose InfoCrypting?</h2>\r\n          <p className=\"lead text-muted\">Modern solutions for sharing your contact information</p>\r\n        </Col>\r\n        \r\n        <Col md={3} sm={6} className=\"mb-4\">\r\n          <Card className=\"feature-card text-center h-100 border-0\">\r\n            <Card.Body>\r\n              <div className=\"feature-icon\">\r\n                <FaMobileAlt />\r\n              </div>\r\n              <Card.Title className=\"fw-bold\">NFC Compatible</Card.Title>\r\n              <Card.Text>\r\n                Just tap your NFC-enabled phone to instantly access your digital contact card.\r\n              </Card.Text>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        \r\n        <Col md={3} sm={6} className=\"mb-4\">\r\n          <Card className=\"feature-card text-center h-100 border-0\">\r\n            <Card.Body>\r\n              <div className=\"feature-icon\">\r\n                <FaQrcode />\r\n              </div>\r\n              <Card.Title className=\"fw-bold\">QR Code Access</Card.Title>\r\n              <Card.Text>\r\n                Scan the QR code with any smartphone camera to view contact information.\r\n              </Card.Text>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        \r\n        <Col md={3} sm={6} className=\"mb-4\">\r\n          <Card className=\"feature-card text-center h-100 border-0\">\r\n            <Card.Body>\r\n              <div className=\"feature-icon\">\r\n                <FaLock />\r\n              </div>\r\n              <Card.Title className=\"fw-bold\">Secure Storage</Card.Title>\r\n              <Card.Text>\r\n                Your contact information is securely stored and protected with authentication.\r\n              </Card.Text>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        \r\n        <Col md={3} sm={6} className=\"mb-4\">\r\n          <Card className=\"feature-card text-center h-100 border-0\">\r\n            <Card.Body>\r\n              <div className=\"feature-icon\">\r\n                <FaUserShield />\r\n              </div>\r\n              <Card.Title className=\"fw-bold\">Privacy Control</Card.Title>\r\n              <Card.Text>\r\n                Choose what information is public and what requires authentication.\r\n              </Card.Text>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n\r\n      {/* How It Works Section */}\r\n      <Row className=\"py-5\">\r\n        <Col xs={12} className=\"text-center mb-5\">\r\n          <h2 className=\"fw-bold\">How It Works</h2>\r\n          <p className=\"lead text-muted\">Simple steps to get started with your digital contact card</p>\r\n        </Col>\r\n        \r\n        <Col md={3} sm={6} className=\"mb-4\">\r\n          <div className=\"step-card text-center\">\r\n            <div className=\"step-number\">1</div>\r\n            <div className=\"step-icon\">\r\n              <FaIdCard />\r\n            </div>\r\n            <h4 className=\"mt-4\">Create Your Card</h4>\r\n            <p>Set up your digital contact card with your information and social links</p>\r\n          </div>\r\n        </Col>\r\n        \r\n        <Col md={3} sm={6} className=\"mb-4\">\r\n          <div className=\"step-card text-center\">\r\n            <div className=\"step-number\">2</div>\r\n            <div className=\"step-icon\">\r\n              <FaMobileAlt />\r\n            </div>\r\n            <h4 className=\"mt-4\">Program NFC Tag</h4>\r\n            <p>Link an NFC tag to your unique contact card URL</p>\r\n          </div>\r\n        </Col>\r\n        \r\n        <Col md={3} sm={6} className=\"mb-4\">\r\n          <div className=\"step-card text-center\">\r\n            <div className=\"step-number\">3</div>\r\n            <div className=\"step-icon\">\r\n              <FaQrcode />\r\n            </div>\r\n            <h4 className=\"mt-4\">Generate QR Code</h4>\r\n            <p>Create a QR code for non-NFC devices to scan</p>\r\n          </div>\r\n        </Col>\r\n        \r\n        <Col md={3} sm={6} className=\"mb-4\">\r\n          <div className=\"step-card text-center\">\r\n            <div className=\"step-number\">4</div>\r\n            <div className=\"step-icon\">\r\n              <FaShareAlt />\r\n            </div>\r\n            <h4 className=\"mt-4\">Share Securely</h4>\r\n            <p>Only authenticated users can see your private information</p>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n\r\n      {/* CTA Section */}\r\n      <Row className=\"py-5\">\r\n        <Col xs={12}>\r\n          <div className=\"cta-section text-center p-5\">\r\n            <h2 className=\"fw-bold mb-4\">Ready to Go Digital?</h2>\r\n            <p className=\"lead mb-4\">\r\n              Start sharing your contact information in a modern, secure way.\r\n            </p>\r\n            <Button as={Link} to={isAuthenticated ? \"/contact\" : \"/login\"} variant=\"primary\" size=\"lg\" className=\"rounded-pill\">\r\n              <FaRocket className=\"me-2\" /> Get Started Now\r\n            </Button>\r\n            \r\n            {demoMode && (\r\n              <div className=\"mt-4\">\r\n                <p className=\"text-muted\">\r\n                  <small>\r\n                    <FaInfoCircle className=\"me-1\" /> \r\n                    This demo uses simulated data. For a full experience, the application requires a backend server.\r\n                  </small>\r\n                </p>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Home; ","import React, { useState, useContext, useEffect } from 'react';\r\nimport { Container, Row, Col, Card, Form, Button, Alert } from 'react-bootstrap';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { AuthContext } from '../context/AuthContext';\r\n\r\nconst Login = () => {\r\n  const [formData, setFormData] = useState({\r\n    username: '',\r\n    password: ''\r\n  });\r\n  const [validated, setValidated] = useState(false);\r\n  const { login, isAuthenticated, error } = useContext(AuthContext);\r\n  const navigate = useNavigate();\r\n\r\n  // Redirect if already authenticated\r\n  useEffect(() => {\r\n    if (isAuthenticated) {\r\n      navigate('/contact');\r\n    }\r\n  }, [isAuthenticated, navigate]);\r\n\r\n  const { username, password } = formData;\r\n\r\n  const onChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    const form = e.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      e.stopPropagation();\r\n      setValidated(true);\r\n      return;\r\n    }\r\n    \r\n    setValidated(true);\r\n    \r\n    const success = await login(username, password);\r\n    if (success) {\r\n      navigate('/contact');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Row className=\"justify-content-center\">\r\n        <Col md={6}>\r\n          <Card className=\"shadow\">\r\n            <Card.Header className=\"bg-primary text-white\">\r\n              <h4 className=\"mb-0\">Login to Access Contact Information</h4>\r\n            </Card.Header>\r\n            <Card.Body>\r\n              {error && <Alert variant=\"danger\">{error}</Alert>}\r\n              \r\n              <Form noValidate validated={validated} onSubmit={onSubmit}>\r\n                <Form.Group className=\"mb-3\" controlId=\"username\">\r\n                  <Form.Label>Username</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    name=\"username\"\r\n                    value={username}\r\n                    onChange={onChange}\r\n                    placeholder=\"Enter username\"\r\n                    required\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    Please provide a username.\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"mb-4\" controlId=\"password\">\r\n                  <Form.Label>Password</Form.Label>\r\n                  <Form.Control\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    value={password}\r\n                    onChange={onChange}\r\n                    placeholder=\"Enter password\"\r\n                    required\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    Please provide a password.\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <div className=\"d-grid\">\r\n                  <Button variant=\"primary\" type=\"submit\" size=\"lg\">\r\n                    Login\r\n                  </Button>\r\n                </div>\r\n              </Form>\r\n            </Card.Body>\r\n            <Card.Footer className=\"text-muted text-center\">\r\n              <small>\r\n                This login protects sensitive contact information.\r\n                <br />\r\n                Public information is still accessible without login.\r\n              </small>\r\n            </Card.Footer>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Login; ","import React, { useState, useEffect, useContext, useRef } from 'react';\r\nimport { Container, Row, Col, Card, Button, ListGroup, Alert, Spinner, Badge } from 'react-bootstrap';\r\nimport { useParams, Link, useLocation } from 'react-router-dom';\r\nimport { \r\n  FaEnvelope, FaPhone, FaGlobe, FaMapMarkerAlt, FaLinkedin, \r\n  FaTwitter, FaGithub, FaInstagram, FaDownload, FaShare,\r\n  FaQrcode, FaMobileAlt, FaUserTie, FaBuilding, FaIdCard, FaEdit, FaUniversity,\r\n  FaFileInvoiceDollar, FaIdBadge\r\n} from 'react-icons/fa';\r\nimport QRCode from 'qrcode.react';\r\nimport axios from 'axios';\r\nimport { AuthContext } from '../context/AuthContext';\r\nimport '../styles/ContactCard.css';\r\n\r\nconst ContactCard = () => {\r\n  const [contactData, setContactData] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [activeTab, setActiveTab] = useState('info');\r\n  const [animateProfile, setAnimateProfile] = useState(false);\r\n  const [isMobile, setIsMobile] = useState(window.innerWidth <= 768);\r\n  const { isAuthenticated, getContactData, demoMode } = useContext(AuthContext);\r\n  const { id } = useParams();\r\n  const cardRef = useRef(null);\r\n  const location = useLocation();\r\n  \r\n  // Check if view=public is in the URL query parameters\r\n  const searchParams = new URLSearchParams(location.search);\r\n  const isPublicView = searchParams.get('view') === 'public';\r\n\r\n  // Force private view on mobile devices\r\n  const [forcedPrivateView, setForcedPrivateView] = useState(false);\r\n  \r\n  // Add mobile-view class to body when on mobile\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      const mobile = window.innerWidth <= 768;\r\n      setIsMobile(mobile);\r\n      \r\n      // Force private view on mobile\r\n      if (mobile && isPublicView) {\r\n        setForcedPrivateView(true);\r\n      } else {\r\n        setForcedPrivateView(false);\r\n      }\r\n      \r\n      if (mobile) {\r\n        document.body.classList.add('mobile-contact-view');\r\n      } else {\r\n        document.body.classList.remove('mobile-contact-view');\r\n      }\r\n    };\r\n    \r\n    // Initial check\r\n    handleResize();\r\n    \r\n    // Add event listener\r\n    window.addEventListener('resize', handleResize);\r\n    \r\n    // Cleanup\r\n    return () => {\r\n      window.removeEventListener('resize', handleResize);\r\n      document.body.classList.remove('mobile-contact-view');\r\n    };\r\n  }, [isPublicView]);\r\n\r\n  // Adjusted public view check - never public on mobile\r\n  const effectivePublicView = isPublicView && !forcedPrivateView;\r\n  \r\n  // For display logic, consider user viewing public data if public view is forced and not on mobile\r\n  const shouldShowPublicDataOnly = effectivePublicView && !isAuthenticated;\r\n\r\n  useEffect(() => {\r\n    const fetchContactData = async () => {\r\n      try {\r\n        if (demoMode) {\r\n          // Use the demo contact data from context\r\n          const data = await getContactData();\r\n          setContactData(data);\r\n        } else {\r\n          // Use the API endpoint for production - force private on mobile\r\n          const endpoint = isAuthenticated || forcedPrivateView ? '/api/contact' : '/api/contact/public';\r\n          const res = await axios.get(endpoint);\r\n          setContactData(res.data);\r\n        }\r\n        \r\n        setLoading(false);\r\n        \r\n        // Trigger animation after data is loaded\r\n        setTimeout(() => {\r\n          setAnimateProfile(true);\r\n        }, 300);\r\n      } catch (err) {\r\n        console.error('Error fetching contact data:', err);\r\n        setError('Failed to load contact information');\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchContactData();\r\n  }, [isAuthenticated, getContactData, demoMode, forcedPrivateView]);\r\n\r\n  // Function to generate vCard\r\n  const generateVCard = () => {\r\n    if (!contactData) return '';\r\n    \r\n    let vcard = 'BEGIN:VCARD\\nVERSION:3.0\\n';\r\n    vcard += `FN:${contactData.name}\\n`;\r\n    vcard += `TITLE:${contactData.title || ''}\\n`;\r\n    vcard += `ORG:${contactData.company || ''}\\n`;\r\n    \r\n    if (contactData.email) {\r\n      vcard += `EMAIL:${contactData.email}\\n`;\r\n    }\r\n    \r\n    if (contactData.phone) {\r\n      vcard += `TEL:${contactData.phone}\\n`;\r\n    }\r\n    \r\n    if (contactData.website) {\r\n      vcard += `URL:${contactData.website}\\n`;\r\n    }\r\n    \r\n    if (contactData.address) {\r\n      vcard += `ADR:;;${contactData.address};;;\\n`;\r\n    }\r\n    \r\n    // Add identification and tax information as notes\r\n    let additionalInfo = '';\r\n    \r\n    if (isAuthenticated && contactData.identificationNumber) {\r\n      additionalInfo += `ID Number: ${contactData.identificationNumber}\\n`;\r\n    }\r\n    \r\n    if (isAuthenticated && contactData.taxNumber) {\r\n      additionalInfo += `Tax Number: ${contactData.taxNumber}\\n`;\r\n    }\r\n    \r\n    // Add bank account information as notes if available\r\n    if (isAuthenticated && contactData.bankAccounts && contactData.bankAccounts.length > 0) {\r\n      additionalInfo += '\\nBank Accounts:\\n';\r\n      \r\n      contactData.bankAccounts.forEach((account, index) => {\r\n        if (account.bankName) {\r\n          additionalInfo += `Bank ${index + 1}: ${account.bankName} (${account.accountType})\\n`;\r\n          \r\n          if (account.accountNumber) {\r\n            additionalInfo += `Account: ${account.accountNumber}\\n`;\r\n          }\r\n          \r\n          if (account.routingNumber) {\r\n            additionalInfo += `Routing: ${account.routingNumber}\\n`;\r\n          }\r\n          \r\n          if (account.swift) {\r\n            additionalInfo += `SWIFT/BIC: ${account.swift}\\n`;\r\n          }\r\n          \r\n          additionalInfo += '\\n';\r\n        }\r\n      });\r\n    }\r\n    \r\n    if (additionalInfo) {\r\n      vcard += `NOTE:${additionalInfo}\\n`;\r\n    }\r\n    \r\n    vcard += 'END:VCARD';\r\n    return vcard;\r\n  };\r\n\r\n  // Function to download vCard\r\n  const downloadVCard = () => {\r\n    const vcard = generateVCard();\r\n    const blob = new Blob([vcard], { type: 'text/vcard' });\r\n    const url = URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    a.href = url;\r\n    a.download = `${contactData.name.replace(/\\s+/g, '_')}.vcf`;\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    document.body.removeChild(a);\r\n    URL.revokeObjectURL(url);\r\n  };\r\n\r\n  // Function to copy contact info to clipboard\r\n  const copyContactInfo = () => {\r\n    if (!contactData) return;\r\n    \r\n    let info = `Name: ${contactData.name}\\n`;\r\n    info += `Title: ${contactData.title || ''}\\n`;\r\n    info += `Company: ${contactData.company || ''}\\n`;\r\n    \r\n    if (isAuthenticated && contactData.email) {\r\n      info += `Email: ${contactData.email}\\n`;\r\n    }\r\n    \r\n    if (isAuthenticated && contactData.phone) {\r\n      info += `Phone: ${contactData.phone}\\n`;\r\n    }\r\n    \r\n    if (contactData.website) {\r\n      info += `Website: ${contactData.website}\\n`;\r\n    }\r\n    \r\n    if (isAuthenticated && contactData.address) {\r\n      info += `Address: ${contactData.address}\\n`;\r\n    }\r\n    \r\n    if (isAuthenticated && contactData.identificationNumber) {\r\n      info += `ID Number: ${contactData.identificationNumber}\\n`;\r\n    }\r\n    \r\n    if (isAuthenticated && contactData.taxNumber) {\r\n      info += `Tax Number: ${contactData.taxNumber}\\n`;\r\n    }\r\n    \r\n    // Add bank account information if available\r\n    if (isAuthenticated && contactData.bankAccounts && contactData.bankAccounts.length > 0) {\r\n      info += `\\nBank Accounts:\\n`;\r\n      \r\n      contactData.bankAccounts.forEach((account, index) => {\r\n        if (account.bankName) {\r\n          info += `\\nBank ${index + 1}: ${account.bankName} (${account.accountType})\\n`;\r\n          \r\n          if (account.accountNumber) {\r\n            info += `Account Number: ${account.accountNumber}\\n`;\r\n          }\r\n          \r\n          if (account.routingNumber) {\r\n            info += `Routing Number: ${account.routingNumber}\\n`;\r\n          }\r\n          \r\n          if (account.swift) {\r\n            info += `SWIFT/BIC: ${account.swift}\\n`;\r\n          }\r\n        }\r\n      });\r\n    }\r\n    \r\n    if (contactData.bio) {\r\n      info += `\\nAbout Me:\\n${contactData.bio}\\n`;\r\n    }\r\n    \r\n    navigator.clipboard.writeText(info);\r\n    alert('Contact information copied to clipboard!');\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <Container className=\"text-center py-5\">\r\n        <div className=\"loading-container\">\r\n          <div className=\"loading-card\">\r\n            <div className=\"loading-pulse\"></div>\r\n            <Spinner animation=\"border\" variant=\"primary\" className=\"loading-spinner\" />\r\n            <p className=\"mt-3 loading-text\">Loading your digital business card...</p>\r\n          </div>\r\n        </div>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <Container className=\"py-5\">\r\n        <Alert variant=\"danger\">{error}</Alert>\r\n        <div className=\"text-center mt-3\">\r\n          <Button as={Link} to=\"/\" variant=\"primary\">\r\n            Return to Home\r\n          </Button>\r\n        </div>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  if (!contactData) {\r\n    return (\r\n      <Container className=\"py-5\">\r\n        <Alert variant=\"warning\">No contact information available</Alert>\r\n        <div className=\"text-center mt-3\">\r\n          <Button as={Link} to=\"/\" variant=\"primary\">\r\n            Return to Home\r\n          </Button>\r\n        </div>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  // Generate the current URL for QR code\r\n  const currentUrl = window.location.href;\r\n\r\n  return (\r\n    <Container className={`contact-card-container py-4 ${isMobile ? 'mobile-view' : ''}`}>\r\n      {isPublicView && isAuthenticated && !forcedPrivateView && (\r\n        <Alert variant=\"info\" className=\"mb-3\">\r\n          <strong>Public View Mode</strong> - You're viewing this contact card as it appears to the public.\r\n          <Button \r\n            as={Link} \r\n            to=\"/contact\" \r\n            variant=\"link\" \r\n            size=\"sm\" \r\n            className=\"ms-2\"\r\n          >\r\n            Switch to private view\r\n          </Button>\r\n        </Alert>\r\n      )}\r\n      \r\n      {forcedPrivateView && isPublicView && (\r\n        <Alert variant=\"info\" className=\"mb-3\">\r\n          <strong>Private View Mode</strong> - On mobile devices, we always show the private view for better experience.\r\n        </Alert>\r\n      )}\r\n      \r\n      <div className=\"digital-card-wrapper\">\r\n        <div className={`profile-card ${animateProfile ? 'animate' : ''}`} ref={cardRef}>\r\n          <div className=\"card-header-tabs\">\r\n            <div \r\n              className={`tab-item ${activeTab === 'info' ? 'active' : ''}`} \r\n              onClick={() => setActiveTab('info')}\r\n            >\r\n              <FaIdCard /> Info\r\n            </div>\r\n            <div \r\n              className={`tab-item ${activeTab === 'share' ? 'active' : ''}`} \r\n              onClick={() => setActiveTab('share')}\r\n            >\r\n              <FaShare /> Share\r\n            </div>\r\n            {!shouldShowPublicDataOnly && (\r\n              <div \r\n                className={`tab-item ${activeTab === 'nfc' ? 'active' : ''}`} \r\n                onClick={() => setActiveTab('nfc')}\r\n              >\r\n                <FaMobileAlt /> NFC\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"tab-content\">\r\n            {activeTab === 'info' && (\r\n              <div className=\"info-tab\">\r\n                <div className=\"profile-header\">\r\n                  <div className=\"profile-image-container\">\r\n                    {contactData.profileImage ? (\r\n                      <img\r\n                        src={contactData.profileImage}\r\n                        alt={contactData.name}\r\n                        className=\"profile-image\"\r\n                      />\r\n                    ) : (\r\n                      <div className=\"profile-image-placeholder\">\r\n                        {contactData.name.charAt(0)}\r\n                      </div>\r\n                    )}\r\n                    <div className=\"profile-glow\"></div>\r\n                  </div>\r\n                  <div className=\"profile-title\">\r\n                    <h2 className=\"name\">{contactData.name}</h2>\r\n                    <div className=\"title-badge\">\r\n                      <FaUserTie className=\"icon\" />\r\n                      <span>{contactData.title}</span>\r\n                    </div>\r\n                    <div className=\"company-badge\">\r\n                      <FaBuilding className=\"icon\" />\r\n                      <span>{contactData.company}</span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"contact-details\">\r\n                  {!shouldShowPublicDataOnly && contactData.email && (\r\n                    <div className=\"contact-item email-item\">\r\n                      <div className=\"icon-container\">\r\n                        <FaEnvelope className=\"contact-icon\" />\r\n                      </div>\r\n                      <div className=\"contact-info\">\r\n                        <div className=\"label\">Email</div>\r\n                        <a href={`mailto:${contactData.email}`} className=\"value\">\r\n                          {contactData.email}\r\n                        </a>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                  \r\n                  {!shouldShowPublicDataOnly && contactData.phone && (\r\n                    <div className=\"contact-item phone-item\">\r\n                      <div className=\"icon-container\">\r\n                        <FaPhone className=\"contact-icon\" />\r\n                      </div>\r\n                      <div className=\"contact-info\">\r\n                        <div className=\"label\">Phone</div>\r\n                        <a href={`tel:${contactData.phone}`} className=\"value\">\r\n                          {contactData.phone}\r\n                        </a>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                  \r\n                  {contactData.website && (\r\n                    <div className=\"contact-item website-item\">\r\n                      <div className=\"icon-container\">\r\n                        <FaGlobe className=\"contact-icon\" />\r\n                      </div>\r\n                      <div className=\"contact-info\">\r\n                        <div className=\"label\">Website</div>\r\n                        <a href={contactData.website} target=\"_blank\" rel=\"noopener noreferrer\" className=\"value\">\r\n                          {contactData.website.replace(/^https?:\\/\\//, '')}\r\n                        </a>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                  \r\n                  {!shouldShowPublicDataOnly && contactData.address && (\r\n                    <div className=\"contact-item address-item\">\r\n                      <div className=\"icon-container\">\r\n                        <FaMapMarkerAlt className=\"contact-icon\" />\r\n                      </div>\r\n                      <div className=\"contact-info\">\r\n                        <div className=\"label\">Address</div>\r\n                        <div className=\"value\">{contactData.address}</div>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n\r\n                  {!shouldShowPublicDataOnly && contactData.identificationNumber && (\r\n                    <div className=\"contact-item id-item\">\r\n                      <div className=\"icon-container\">\r\n                        <FaIdBadge className=\"contact-icon\" />\r\n                      </div>\r\n                      <div className=\"contact-info\">\r\n                        <div className=\"label\">Identification Number</div>\r\n                        <div className=\"value\">{contactData.identificationNumber}</div>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n\r\n                  {!shouldShowPublicDataOnly && contactData.taxNumber && (\r\n                    <div className=\"contact-item tax-item\">\r\n                      <div className=\"icon-container\">\r\n                        <FaFileInvoiceDollar className=\"contact-icon\" />\r\n                      </div>\r\n                      <div className=\"contact-info\">\r\n                        <div className=\"label\">Tax Number</div>\r\n                        <div className=\"value\">{contactData.taxNumber}</div>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n                {!shouldShowPublicDataOnly && contactData.bankAccounts && contactData.bankAccounts.length > 0 && (\r\n                  <div className=\"bank-accounts-section\">\r\n                    <h4>Bank Account Information</h4>\r\n                    {contactData.bankAccounts.map((account, index) => (\r\n                      <div key={index} className=\"bank-account-item\">\r\n                        <div className=\"bank-header\">\r\n                          <FaUniversity className=\"bank-icon\" />\r\n                          <h5>{account.bankName || 'Bank Account'} ({account.accountType})</h5>\r\n                        </div>\r\n                        <div className=\"bank-details\">\r\n                          {account.accountNumber && (\r\n                            <div className=\"bank-detail\">\r\n                              <span className=\"detail-label\">Account Number:</span>\r\n                              <span className=\"detail-value\">{account.accountNumber}</span>\r\n                            </div>\r\n                          )}\r\n                          {account.routingNumber && (\r\n                            <div className=\"bank-detail\">\r\n                              <span className=\"detail-label\">Routing Number:</span>\r\n                              <span className=\"detail-value\">{account.routingNumber}</span>\r\n                            </div>\r\n                          )}\r\n                          {account.swift && (\r\n                            <div className=\"bank-detail\">\r\n                              <span className=\"detail-label\">SWIFT/BIC:</span>\r\n                              <span className=\"detail-value\">{account.swift}</span>\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                )}\r\n\r\n                {contactData.socials && Object.keys(contactData.socials).length > 0 && (\r\n                  <div className=\"social-links\">\r\n                    <h4>Connect With Me</h4>\r\n                    <div className=\"social-icons\">\r\n                      {contactData.socials.linkedin && (\r\n                        <a\r\n                          href={contactData.socials.linkedin}\r\n                          target=\"_blank\"\r\n                          rel=\"noopener noreferrer\"\r\n                          className=\"social-icon linkedin\"\r\n                          aria-label=\"LinkedIn\"\r\n                        >\r\n                          <FaLinkedin />\r\n                        </a>\r\n                      )}\r\n                      {contactData.socials.twitter && (\r\n                        <a\r\n                          href={contactData.socials.twitter}\r\n                          target=\"_blank\"\r\n                          rel=\"noopener noreferrer\"\r\n                          className=\"social-icon twitter\"\r\n                          aria-label=\"Twitter\"\r\n                        >\r\n                          <FaTwitter />\r\n                        </a>\r\n                      )}\r\n                      {contactData.socials.github && (\r\n                        <a\r\n                          href={contactData.socials.github}\r\n                          target=\"_blank\"\r\n                          rel=\"noopener noreferrer\"\r\n                          className=\"social-icon github\"\r\n                          aria-label=\"GitHub\"\r\n                        >\r\n                          <FaGithub />\r\n                        </a>\r\n                      )}\r\n                      {contactData.socials.instagram && (\r\n                        <a\r\n                          href={contactData.socials.instagram}\r\n                          target=\"_blank\"\r\n                          rel=\"noopener noreferrer\"\r\n                          className=\"social-icon instagram\"\r\n                          aria-label=\"Instagram\"\r\n                        >\r\n                          <FaInstagram />\r\n                        </a>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                )}\r\n\r\n                {contactData.bio && (\r\n                  <div className=\"bio-section\">\r\n                    <h4>About Me</h4>\r\n                    <p>{contactData.bio}</p>\r\n                  </div>\r\n                )}\r\n\r\n                <div className=\"action-buttons\">\r\n                  <Button \r\n                    variant=\"primary\" \r\n                    className=\"action-button save-button\"\r\n                    onClick={downloadVCard}\r\n                  >\r\n                    <FaDownload className=\"button-icon\" /> Save Contact\r\n                  </Button>\r\n                  <Button \r\n                    variant=\"outline-primary\" \r\n                    className=\"action-button copy-button\"\r\n                    onClick={copyContactInfo}\r\n                  >\r\n                    <FaShare className=\"button-icon\" /> Copy Info\r\n                  </Button>\r\n                  {isAuthenticated && (\r\n                    <Button \r\n                      variant=\"outline-success\" \r\n                      className=\"action-button edit-button\"\r\n                      as={Link}\r\n                      to=\"/edit\"\r\n                    >\r\n                      <FaEdit className=\"button-icon\" /> Edit Info\r\n                    </Button>\r\n                  )}\r\n                </div>\r\n\r\n                {!isAuthenticated && (\r\n                  <div className=\"login-prompt\">\r\n                    <Alert variant=\"info\" className=\"mb-0\">\r\n                      <strong>Note:</strong> Some contact information is hidden.{' '}\r\n                      <Link to=\"/login\" className=\"login-link\">Login</Link> to view all details.\r\n                    </Alert>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            )}\r\n\r\n            {activeTab === 'share' && (\r\n              <div className=\"share-tab\">\r\n                <h3 className=\"tab-title\">Share My Contact</h3>\r\n                <div className=\"qr-section\">\r\n                  <div className=\"qr-container\">\r\n                    <QRCode \r\n                      value={currentUrl} \r\n                      size={200} \r\n                      level=\"H\"\r\n                      renderAs=\"svg\"\r\n                      includeMargin={true}\r\n                      className=\"qr-code\"\r\n                    />\r\n                  </div>\r\n                  <p className=\"qr-instructions\">Scan this QR code to access this contact card</p>\r\n                </div>\r\n                \r\n                <div className=\"share-buttons\">\r\n                  <Button \r\n                    variant=\"success\" \r\n                    className=\"share-button\"\r\n                    onClick={() => window.print()}\r\n                  >\r\n                    <FaDownload className=\"button-icon\" /> Print Card\r\n                  </Button>\r\n                  \r\n                  <Button\r\n                    variant=\"primary\"\r\n                    className=\"share-button\"\r\n                    onClick={() => {\r\n                      navigator.clipboard.writeText(currentUrl);\r\n                      alert('URL copied to clipboard!');\r\n                    }}\r\n                  >\r\n                    <FaShare className=\"button-icon\" /> Copy URL\r\n                  </Button>\r\n                  \r\n                  {navigator.share && (\r\n                    <Button\r\n                      variant=\"info\"\r\n                      className=\"share-button\"\r\n                      onClick={() => {\r\n                        navigator.share({\r\n                          title: `${contactData.name}'s Contact Card`,\r\n                          text: `Check out ${contactData.name}'s contact information`,\r\n                          url: currentUrl,\r\n                        });\r\n                      }}\r\n                    >\r\n                      <FaShare className=\"button-icon\" /> Share\r\n                    </Button>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {activeTab === 'nfc' && !shouldShowPublicDataOnly && (\r\n              <div className=\"nfc-tab\">\r\n                <h3 className=\"tab-title\">NFC Setup</h3>\r\n                <div className=\"nfc-instructions\">\r\n                  <div className=\"nfc-icon-container\">\r\n                    <FaMobileAlt className=\"nfc-icon\" />\r\n                  </div>\r\n                  <h4>Program Your NFC Tag</h4>\r\n                  <ol className=\"instruction-steps\">\r\n                    <li>Use an NFC writing app on your smartphone</li>\r\n                    <li>Select \"Write URL\" or \"Website\" option</li>\r\n                    <li>Enter this URL:</li>\r\n                  </ol>\r\n                  <div className=\"url-display\">\r\n                    <code>{currentUrl}</code>\r\n                    <Button\r\n                      variant=\"outline-secondary\"\r\n                      size=\"sm\"\r\n                      className=\"copy-url-btn\"\r\n                      onClick={() => {\r\n                        navigator.clipboard.writeText(currentUrl);\r\n                        alert('URL copied to clipboard!');\r\n                      }}\r\n                    >\r\n                      Copy\r\n                    </Button>\r\n                  </div>\r\n                  <li>Hold your phone near the NFC tag to write</li>\r\n                  <div className=\"nfc-note\">\r\n                    <p>\r\n                      <small className=\"text-muted\">\r\n                        Once programmed, anyone can tap the NFC tag with their phone to view this contact card.\r\n                      </small>\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n          \r\n          <div className=\"card-footer\">\r\n            <div className=\"powered-by\">\r\n              Powered by <span className=\"brand\">InfoCrypting</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ContactCard; ","import React, { useState, useEffect, useContext } from 'react';\r\nimport { Container, Form, Button, Card, Row, Col, Alert, Spinner } from 'react-bootstrap';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { \r\n  FaUser, FaBriefcase, FaBuilding, FaEnvelope, FaPhone, \r\n  FaGlobe, FaMapMarkerAlt, FaLinkedin, FaTwitter, FaGithub, \r\n  FaInstagram, FaSave, FaTimes, FaUniversity, FaCreditCard,\r\n  FaIdCard, FaFileInvoiceDollar\r\n} from 'react-icons/fa';\r\nimport axios from 'axios';\r\nimport { AuthContext } from '../context/AuthContext';\r\nimport '../styles/EditContact.css';\r\n\r\nconst EditContact = () => {\r\n  const { isAuthenticated, loading: authLoading, getContactData, demoMode } = useContext(AuthContext);\r\n  const navigate = useNavigate();\r\n  \r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    title: '',\r\n    company: '',\r\n    email: '',\r\n    phone: '',\r\n    address: '',\r\n    website: '',\r\n    bio: '',\r\n    taxNumber: '',\r\n    identificationNumber: '',\r\n    socials: {\r\n      linkedin: '',\r\n      twitter: '',\r\n      github: '',\r\n      instagram: ''\r\n    },\r\n    bankAccounts: [\r\n      {\r\n        bankName: '',\r\n        accountNumber: '',\r\n        accountType: 'Checking',\r\n        routingNumber: '',\r\n        swift: ''\r\n      }\r\n    ],\r\n    profileImage: ''\r\n  });\r\n  \r\n  const [loading, setLoading] = useState(true);\r\n  const [saving, setSaving] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [success, setSuccess] = useState(false);\r\n  \r\n  // Redirect if not authenticated\r\n  useEffect(() => {\r\n    if (!authLoading && !isAuthenticated) {\r\n      navigate('/login');\r\n    }\r\n  }, [isAuthenticated, authLoading, navigate]);\r\n  \r\n  // Fetch contact data\r\n  useEffect(() => {\r\n    const fetchContactData = async () => {\r\n      try {\r\n        let contactData;\r\n        \r\n        if (demoMode) {\r\n          // Use demo data in GitHub Pages deployment\r\n          contactData = await getContactData();\r\n        } else {\r\n          // Use API in production\r\n          const res = await axios.get('/api/contact');\r\n          contactData = res.data;\r\n        }\r\n        \r\n        // Initialize bank accounts if they don't exist\r\n        if (!contactData.bankAccounts) {\r\n          contactData.bankAccounts = [\r\n            {\r\n              bankName: '',\r\n              accountNumber: '',\r\n              accountType: 'Checking',\r\n              routingNumber: '',\r\n              swift: ''\r\n            }\r\n          ];\r\n        }\r\n        \r\n        // Initialize tax and identification numbers if they don't exist\r\n        if (!contactData.taxNumber) {\r\n          contactData.taxNumber = '';\r\n        }\r\n        \r\n        if (!contactData.identificationNumber) {\r\n          contactData.identificationNumber = '';\r\n        }\r\n        \r\n        setFormData(contactData);\r\n        setLoading(false);\r\n      } catch (err) {\r\n        console.error('Error fetching contact data:', err);\r\n        setError('Failed to load contact information');\r\n        setLoading(false);\r\n      }\r\n    };\r\n    \r\n    if (isAuthenticated) {\r\n      fetchContactData();\r\n    }\r\n  }, [isAuthenticated, getContactData, demoMode]);\r\n  \r\n  // Handle form input changes\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    \r\n    if (name.includes('socials.')) {\r\n      const socialField = name.split('.')[1];\r\n      setFormData({\r\n        ...formData,\r\n        socials: {\r\n          ...formData.socials,\r\n          [socialField]: value\r\n        }\r\n      });\r\n    } else {\r\n      setFormData({\r\n        ...formData,\r\n        [name]: value\r\n      });\r\n    }\r\n  };\r\n  \r\n  // Handle bank account field changes\r\n  const handleBankAccountChange = (index, field, value) => {\r\n    const updatedBankAccounts = [...formData.bankAccounts];\r\n    updatedBankAccounts[index] = {\r\n      ...updatedBankAccounts[index],\r\n      [field]: value\r\n    };\r\n    \r\n    setFormData({\r\n      ...formData,\r\n      bankAccounts: updatedBankAccounts\r\n    });\r\n  };\r\n  \r\n  // Add new bank account\r\n  const addBankAccount = () => {\r\n    setFormData({\r\n      ...formData,\r\n      bankAccounts: [\r\n        ...formData.bankAccounts,\r\n        {\r\n          bankName: '',\r\n          accountNumber: '',\r\n          accountType: 'Checking',\r\n          routingNumber: '',\r\n          swift: ''\r\n        }\r\n      ]\r\n    });\r\n  };\r\n  \r\n  // Remove bank account\r\n  const removeBankAccount = (index) => {\r\n    const updatedBankAccounts = [...formData.bankAccounts];\r\n    updatedBankAccounts.splice(index, 1);\r\n    \r\n    setFormData({\r\n      ...formData,\r\n      bankAccounts: updatedBankAccounts\r\n    });\r\n  };\r\n  \r\n  // Handle form submission\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setSaving(true);\r\n    setError(null);\r\n    setSuccess(false);\r\n    \r\n    try {\r\n      if (demoMode) {\r\n        // In demo mode, just simulate a successful save\r\n        await new Promise(resolve => setTimeout(resolve, 1000)); // Simulate network delay\r\n        setSuccess(true);\r\n      } else {\r\n        // In production, save to the server\r\n        await axios.put('/api/contact', formData);\r\n        setSuccess(true);\r\n      }\r\n      setSaving(false);\r\n      \r\n      // Scroll to top to show success message\r\n      window.scrollTo({ top: 0, behavior: 'smooth' });\r\n    } catch (err) {\r\n      console.error('Error updating contact data:', err);\r\n      setError('Failed to update contact information');\r\n      setSaving(false);\r\n      \r\n      // Scroll to top to show error message\r\n      window.scrollTo({ top: 0, behavior: 'smooth' });\r\n    }\r\n  };\r\n  \r\n  if (loading || authLoading) {\r\n    return (\r\n      <Container className=\"text-center py-5\">\r\n        <div className=\"loading-container\">\r\n          <Spinner animation=\"border\" variant=\"primary\" />\r\n          <p className=\"mt-3\">Loading...</p>\r\n        </div>\r\n      </Container>\r\n    );\r\n  }\r\n  \r\n  return (\r\n    <Container className=\"edit-contact-container py-4\">\r\n      <Card className=\"edit-card\">\r\n        <Card.Header className=\"text-center\">\r\n          <h2><FaUser className=\"me-2\" /> Edit Contact Information</h2>\r\n        </Card.Header>\r\n        <Card.Body>\r\n          {error && (\r\n            <Alert variant=\"danger\" className=\"mb-4\">\r\n              {error}\r\n            </Alert>\r\n          )}\r\n          \r\n          {success && (\r\n            <Alert variant=\"success\" className=\"mb-4\">\r\n              Contact information updated successfully!\r\n            </Alert>\r\n          )}\r\n          \r\n          <Form onSubmit={handleSubmit}>\r\n            <h4 className=\"section-title\">Basic Information</h4>\r\n            <Row className=\"mb-4\">\r\n              <Col md={6}>\r\n                <Form.Group className=\"mb-3\">\r\n                  <Form.Label>\r\n                    <FaUser className=\"me-2\" /> Full Name\r\n                  </Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    value={formData.name}\r\n                    onChange={handleChange}\r\n                    required\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n              <Col md={6}>\r\n                <Form.Group className=\"mb-3\">\r\n                  <Form.Label>\r\n                    <FaBriefcase className=\"me-2\" /> Job Title\r\n                  </Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    name=\"title\"\r\n                    value={formData.title}\r\n                    onChange={handleChange}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n            </Row>\r\n            \r\n            <Row className=\"mb-4\">\r\n              <Col md={6}>\r\n                <Form.Group className=\"mb-3\">\r\n                  <Form.Label>\r\n                    <FaBuilding className=\"me-2\" /> Company\r\n                  </Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    name=\"company\"\r\n                    value={formData.company}\r\n                    onChange={handleChange}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n              <Col md={6}>\r\n                <Form.Group className=\"mb-3\">\r\n                  <Form.Label>\r\n                    <FaGlobe className=\"me-2\" /> Website\r\n                  </Form.Label>\r\n                  <Form.Control\r\n                    type=\"url\"\r\n                    name=\"website\"\r\n                    value={formData.website}\r\n                    onChange={handleChange}\r\n                    placeholder=\"https://example.com\"\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n            </Row>\r\n            \r\n            <h4 className=\"section-title\">Contact Details</h4>\r\n            <Row className=\"mb-4\">\r\n              <Col md={6}>\r\n                <Form.Group className=\"mb-3\">\r\n                  <Form.Label>\r\n                    <FaEnvelope className=\"me-2\" /> Email Address\r\n                  </Form.Label>\r\n                  <Form.Control\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    value={formData.email}\r\n                    onChange={handleChange}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n              <Col md={6}>\r\n                <Form.Group className=\"mb-3\">\r\n                  <Form.Label>\r\n                    <FaPhone className=\"me-2\" /> Phone Number\r\n                  </Form.Label>\r\n                  <Form.Control\r\n                    type=\"tel\"\r\n                    name=\"phone\"\r\n                    value={formData.phone}\r\n                    onChange={handleChange}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n            </Row>\r\n            \r\n            <Row className=\"mb-4\">\r\n              <Col>\r\n                <Form.Group className=\"mb-3\">\r\n                  <Form.Label>\r\n                    <FaMapMarkerAlt className=\"me-2\" /> Address\r\n                  </Form.Label>\r\n                  <Form.Control\r\n                    as=\"textarea\"\r\n                    rows={2}\r\n                    name=\"address\"\r\n                    value={formData.address}\r\n                    onChange={handleChange}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n            </Row>\r\n            \r\n            <h4 className=\"section-title\">Identification & Tax Information</h4>\r\n            <Row className=\"mb-4\">\r\n              <Col md={6}>\r\n                <Form.Group className=\"mb-3\">\r\n                  <Form.Label>\r\n                    <FaIdCard className=\"me-2\" /> Identification Number\r\n                  </Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    name=\"identificationNumber\"\r\n                    value={formData.identificationNumber}\r\n                    onChange={handleChange}\r\n                    placeholder=\"SSN, National ID, Passport, etc.\"\r\n                  />\r\n                  <Form.Text className=\"text-muted\">\r\n                    Personal identification number (SSN, National ID, etc.)\r\n                  </Form.Text>\r\n                </Form.Group>\r\n              </Col>\r\n              <Col md={6}>\r\n                <Form.Group className=\"mb-3\">\r\n                  <Form.Label>\r\n                    <FaFileInvoiceDollar className=\"me-2\" /> Tax Number\r\n                  </Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    name=\"taxNumber\"\r\n                    value={formData.taxNumber}\r\n                    onChange={handleChange}\r\n                    placeholder=\"Tax ID, VAT Number, etc.\"\r\n                  />\r\n                  <Form.Text className=\"text-muted\">\r\n                    Tax identification number for business purposes\r\n                  </Form.Text>\r\n                </Form.Group>\r\n              </Col>\r\n            </Row>\r\n            \r\n            <h4 className=\"section-title\">Social Media</h4>\r\n            <Row className=\"mb-4\">\r\n              <Col md={6}>\r\n                <Form.Group className=\"mb-3\">\r\n                  <Form.Label>\r\n                    <FaLinkedin className=\"me-2\" /> LinkedIn\r\n                  </Form.Label>\r\n                  <Form.Control\r\n                    type=\"url\"\r\n                    name=\"socials.linkedin\"\r\n                    value={formData.socials.linkedin}\r\n                    onChange={handleChange}\r\n                    placeholder=\"https://linkedin.com/in/username\"\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n              <Col md={6}>\r\n                <Form.Group className=\"mb-3\">\r\n                  <Form.Label>\r\n                    <FaTwitter className=\"me-2\" /> Twitter\r\n                  </Form.Label>\r\n                  <Form.Control\r\n                    type=\"url\"\r\n                    name=\"socials.twitter\"\r\n                    value={formData.socials.twitter}\r\n                    onChange={handleChange}\r\n                    placeholder=\"https://twitter.com/username\"\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n            </Row>\r\n            \r\n            <Row className=\"mb-4\">\r\n              <Col md={6}>\r\n                <Form.Group className=\"mb-3\">\r\n                  <Form.Label>\r\n                    <FaGithub className=\"me-2\" /> GitHub\r\n                  </Form.Label>\r\n                  <Form.Control\r\n                    type=\"url\"\r\n                    name=\"socials.github\"\r\n                    value={formData.socials.github}\r\n                    onChange={handleChange}\r\n                    placeholder=\"https://github.com/username\"\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n              <Col md={6}>\r\n                <Form.Group className=\"mb-3\">\r\n                  <Form.Label>\r\n                    <FaInstagram className=\"me-2\" /> Instagram\r\n                  </Form.Label>\r\n                  <Form.Control\r\n                    type=\"url\"\r\n                    name=\"socials.instagram\"\r\n                    value={formData.socials.instagram}\r\n                    onChange={handleChange}\r\n                    placeholder=\"https://instagram.com/username\"\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n            </Row>\r\n            \r\n            <h4 className=\"section-title\">\r\n              Bank Account Information\r\n              <Button \r\n                variant=\"outline-primary\" \r\n                size=\"sm\" \r\n                className=\"ms-2\"\r\n                onClick={addBankAccount}\r\n              >\r\n                Add Account\r\n              </Button>\r\n            </h4>\r\n            \r\n            {formData.bankAccounts.map((account, index) => (\r\n              <div key={index} className=\"bank-account-section mb-4\">\r\n                <div className=\"d-flex justify-content-between align-items-center mb-3\">\r\n                  <h5 className=\"mb-0\">Account #{index + 1}</h5>\r\n                  {formData.bankAccounts.length > 1 && (\r\n                    <Button \r\n                      variant=\"outline-danger\" \r\n                      size=\"sm\"\r\n                      onClick={() => removeBankAccount(index)}\r\n                    >\r\n                      <FaTimes /> Remove\r\n                    </Button>\r\n                  )}\r\n                </div>\r\n                \r\n                <Row className=\"mb-3\">\r\n                  <Col md={6}>\r\n                    <Form.Group>\r\n                      <Form.Label>\r\n                        <FaUniversity className=\"me-2\" /> Bank Name\r\n                      </Form.Label>\r\n                      <Form.Control\r\n                        type=\"text\"\r\n                        value={account.bankName}\r\n                        onChange={(e) => handleBankAccountChange(index, 'bankName', e.target.value)}\r\n                      />\r\n                    </Form.Group>\r\n                  </Col>\r\n                  <Col md={6}>\r\n                    <Form.Group>\r\n                      <Form.Label>\r\n                        <FaCreditCard className=\"me-2\" /> Account Number\r\n                      </Form.Label>\r\n                      <Form.Control\r\n                        type=\"text\"\r\n                        value={account.accountNumber}\r\n                        onChange={(e) => handleBankAccountChange(index, 'accountNumber', e.target.value)}\r\n                      />\r\n                    </Form.Group>\r\n                  </Col>\r\n                </Row>\r\n                \r\n                <Row className=\"mb-3\">\r\n                  <Col md={4}>\r\n                    <Form.Group>\r\n                      <Form.Label>Account Type</Form.Label>\r\n                      <Form.Select\r\n                        value={account.accountType}\r\n                        onChange={(e) => handleBankAccountChange(index, 'accountType', e.target.value)}\r\n                      >\r\n                        <option value=\"Checking\">Checking</option>\r\n                        <option value=\"Savings\">Savings</option>\r\n                        <option value=\"Business\">Business</option>\r\n                        <option value=\"Investment\">Investment</option>\r\n                      </Form.Select>\r\n                    </Form.Group>\r\n                  </Col>\r\n                  <Col md={4}>\r\n                    <Form.Group>\r\n                      <Form.Label>Routing Number</Form.Label>\r\n                      <Form.Control\r\n                        type=\"text\"\r\n                        value={account.routingNumber}\r\n                        onChange={(e) => handleBankAccountChange(index, 'routingNumber', e.target.value)}\r\n                      />\r\n                    </Form.Group>\r\n                  </Col>\r\n                  <Col md={4}>\r\n                    <Form.Group>\r\n                      <Form.Label>SWIFT/BIC Code</Form.Label>\r\n                      <Form.Control\r\n                        type=\"text\"\r\n                        value={account.swift}\r\n                        onChange={(e) => handleBankAccountChange(index, 'swift', e.target.value)}\r\n                      />\r\n                    </Form.Group>\r\n                  </Col>\r\n                </Row>\r\n              </div>\r\n            ))}\r\n            \r\n            <h4 className=\"section-title\">About Me</h4>\r\n            <Row className=\"mb-4\">\r\n              <Col>\r\n                <Form.Group className=\"mb-3\">\r\n                  <Form.Label>Bio / About Me</Form.Label>\r\n                  <Form.Control\r\n                    as=\"textarea\"\r\n                    rows={4}\r\n                    name=\"bio\"\r\n                    value={formData.bio}\r\n                    onChange={handleChange}\r\n                    placeholder=\"Tell people about yourself...\"\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n            </Row>\r\n            \r\n            <div className=\"d-grid gap-2 mt-4\">\r\n              <Button \r\n                variant=\"primary\" \r\n                type=\"submit\" \r\n                size=\"lg\"\r\n                disabled={saving}\r\n              >\r\n                {saving ? (\r\n                  <>\r\n                    <Spinner\r\n                      as=\"span\"\r\n                      animation=\"border\"\r\n                      size=\"sm\"\r\n                      role=\"status\"\r\n                      aria-hidden=\"true\"\r\n                      className=\"me-2\"\r\n                    />\r\n                    Saving...\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <FaSave className=\"me-2\" /> Save Changes\r\n                  </>\r\n                )}\r\n              </Button>\r\n            </div>\r\n          </Form>\r\n        </Card.Body>\r\n      </Card>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default EditContact; ","import React from 'react';\r\nimport { Container, Row, Col, Card, Button } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <Container className=\"py-5\">\r\n      <Row className=\"justify-content-center\">\r\n        <Col md={8} lg={6}>\r\n          <Card className=\"shadow text-center\">\r\n            <Card.Body>\r\n              <h1 className=\"display-1 text-muted\">404</h1>\r\n              <h2 className=\"mb-4\">Page Not Found</h2>\r\n              <p className=\"lead mb-4\">\r\n                The page you are looking for might have been removed, had its name changed,\r\n                or is temporarily unavailable.\r\n              </p>\r\n              <Button as={Link} to=\"/\" variant=\"primary\" size=\"lg\">\r\n                Return to Home\r\n              </Button>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default NotFound; ","import React, { useState, useEffect } from 'react';\r\nimport { HashRouter, Routes, Route, useLocation } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\n// Components\r\nimport Navbar from './components/Navbar';\r\nimport Footer from './components/Footer';\r\n\r\n// Pages\r\nimport Home from './pages/Home';\r\nimport Login from './pages/Login';\r\nimport ContactCard from './pages/ContactCard';\r\nimport EditContact from './pages/EditContact';\r\nimport NotFound from './pages/NotFound';\r\n\r\n// Styles\r\nimport './styles/App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n// Auth context\r\nimport { AuthProvider } from './context/AuthContext';\r\n\r\n// Set default headers for all axios requests\r\naxios.defaults.headers.common['Content-Type'] = 'application/json';\r\n\r\n// Set the base URL for all axios requests - update this with your deployed server URL\r\nconst apiUrl = process.env.NODE_ENV === 'production' \r\n  ? 'https://infocrypting-api.herokuapp.com/api'\r\n  : 'http://localhost:5000/api';\r\n  \r\naxios.defaults.baseURL = apiUrl;\r\n\r\n// NavbarWrapper component to conditionally render Navbar\r\nconst NavbarWrapper = () => {\r\n  const location = useLocation();\r\n  const [isMobile, setIsMobile] = useState(window.innerWidth <= 768);\r\n  \r\n  // Check if current page is ContactCard\r\n  const isContactCardPage = location.pathname.includes('/contact');\r\n  \r\n  // Update isMobile state on window resize\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      setIsMobile(window.innerWidth <= 768);\r\n    };\r\n    \r\n    window.addEventListener('resize', handleResize);\r\n    return () => {\r\n      window.removeEventListener('resize', handleResize);\r\n    };\r\n  }, []);\r\n  \r\n  // Hide navbar on mobile when viewing ContactCard\r\n  if (isMobile && isContactCardPage) {\r\n    return null;\r\n  }\r\n  \r\n  return <Navbar />;\r\n};\r\n\r\nconst App = () => {\r\n  return (\r\n    <AuthProvider>\r\n      <HashRouter>\r\n        <div className=\"app-container d-flex flex-column min-vh-100\">\r\n          <NavbarWrapper />\r\n          <main className=\"flex-grow-1\">\r\n            <Routes>\r\n              <Route path=\"/\" element={<Home />} />\r\n              <Route path=\"/login\" element={<Login />} />\r\n              <Route path=\"/contact\" element={<ContactCard />} />\r\n              <Route path=\"/contact/:id\" element={<ContactCard />} />\r\n              <Route path=\"/edit\" element={<EditContact />} />\r\n              <Route path=\"*\" element={<NotFound />} />\r\n            </Routes>\r\n          </main>\r\n          <Footer />\r\n        </div>\r\n      </HashRouter>\r\n    </AuthProvider>\r\n  );\r\n};\r\n\r\nexport default App; ","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals; ","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals(); "],"sourceRoot":""}